package Day14;

public class Day14_3 {
public static void main(String[] args) {
	
	// 메소드 = 함수	
		// 1. 인수 O 반환 O
		// 2. 메소드 호출방법 [ 1. 객체 2. static ]
	// 1. 객체
	컨트롤러 컨트롤러객체 = new 컨트롤러();
	
	컨트롤러객체.입차("1324");
	
	컨트롤러.입차2("1234");
	
	boolean 결과 = 컨트롤러.입차2("1234");
	// 메소드에 1234문자를 인수로 보내고 메소드
	// 실행 후 반환값을 결과 변수에 저장
	
	컨트롤러객체.출차("1234");
	// 메소드에 1234문자 보내고 인수로 보내고 메소드
	// 실행 후 반환값이 없기 때문에 결과 변수 변화 없음
	
	String 결과2 = 컨트롤러객체.메출();
	// 메소드에 인수 없이 보내고 멧드
	// 실행 후 반환값을 결과2 변수에 저장
	
	// 오버라이딩 : 동일한 메소드/ 동일한 인수 -> 동일 인수의 슈퍼클래스나 인터페이스에 존재하는 경우 재정의
	// 상속 : 메소드를 물려받았는데 -> 메소드 재구현
	// 추상메소드 : 인터페이스(구현만 하고 쓰지는 않음)
	// 인터페이스 : 추상메소드 구현 -> 동일 메소드에 구현 (implenments)
}
}
