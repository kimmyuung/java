package 스레드활용과제;

public class 개미와배짱이 extends Thread{
	static boolean stop = false;
String[] context = {
		"봄이 되자 놀기 좋아하는 베짱이는 자신의 집에 다른 벌레들을 불러모아 매일같이 음악을 연주하며 파티를 연다.", 
		"그러던 어느 날, 베짱이의 집 앞에서 개미들이 식량을 나르고 있었고 개미들의 일하는 소리 때문에 베짱이는 파티를 방해받았다며 개미들에게 화를 낸다.", 
		"그러자 다른 벌레들이 \"뭐라고 해도 소용없어. 개미는 원래 노는 것보다 일하는 것을 더 좋아하니까.\"라고 하고 베짱이는 일하는 개미들을 바보 취급한다.", 
		"하지만 베짱이의 여동생은 열심히 일하는 개미들을 대단하다고 생각했다.", 
		"그 때 바람이 불고 여동생 베짱이가 손수건을 떨어뜨리자 개미 한 마리가 그것을 주워준다.",
		"여동생은 개미가 고마워서 개미를 집에 초대한다.", 
		"개미는 한사코 사양했으나 오빠 베짱이는 사양할 필요 없다며 집으로 개미를 데리고 들어온다.", 
		"그런데 개미가 동생 베짱이랑 춤추던 도중 오빠 베짱이가 바이올린 채로 개미의 다리를 걸어 넘어뜨려 다른 벌레들의 웃음거리가 되게 만들고 개미는 \"저는 역시 춤추는 것보다 일하는 게 어울려요\"라며 떠난다.", 
		"여동생은 개미에게 대신 사과하며 보냈는데 그런 개미를 잊을 수가 없었다.",
		"개미들은 비바람 몰아치는 날에도 열심히 일했다.", 
		"그리고 여름이 찾아왔는데, 개미들은 여름에도 열심히 일할 때 베짱이는 여동생을 데리고 \"여름에는 물놀이가 최고야. 일하는 것밖에 모르는 너희들이 불쌍하구나.\"라며 열심히 일만 하는 개미들을 비웃는다.", 
		"동생은 오빠에게 개미들은 놀 시간을 아껴 열심히 일하고 있다며 충고하지만 오빠는 개미들에게 \"그러면 언제까지나 일이나 해라\"라며 동생을 데리고 가버린다.",
		"가을이 찾아오고 개미들은 작물을 거두어들이며 열심히 일하고 있었다.", 
		"하지만 여전히 오빠 베짱이의 게으름 피우는 버릇은 어딜 가시지 않았다.",
		"여동생의 걱정을 뒤로 한 채 매일같이 파티를 하던 중, 파티를 하던 다른 벌레들도 겨울 준비를 위해 하나둘씩 떠난다.", 
		"다른 벌레들도 떠나 파티를 할 수 없게 되자 베짱이는 술에 찌들어 매일을 보낸다.", 
		"여동생이 \"오빠, 언제까지 그러고 있을거야?\"라고 하지만 오빠는 술잔을 집어던지며 \"시끄러, 일하면 되잖아! 나도 일할 때가 되면 일한다고!\"라고 짜증을 내며 드러눕는다.",
		"그러다 겨울이 찾아오고 세찬 바람 때문에 베짱이의 집이 무너지고 만다.", 
		"밖에는 눈까지 내리기 시작하고 갈 곳이 없게 된 베짱이 남매는 엄동설한을 헤매게 된다.", 
		"그러다가 오빠 베짱이는 개미의 집을 발견한다.", 
		"개미는 따뜻한 벽난로 곁에서 책을 읽고 있었다.", 
		"오빠 베짱이는 \"살았다. 개미의 집에서 겨울이 끝날 때 까지 묵을 수 있겠어.\"라며 기뻐하지만, 여동생은 그럴 수 없다고 한다.",
		"오빠가 힘들 때는 서로 도와야 한다며 왜 그런지 묻자 동생은 \"개미들은 이런 때를 위해 열심히 일해 왔는데, 우리들은 그런 개미들을 바보 취급하며 계속 놀기만 했어.", 
		"우리는 개미에게 도움을 받을 자격이...그럴 자격이 우리에게 있어?\"라고 한다.", 
		"이에 오빠 베짱이는 충격을 받고 \"나는 이렇게 되어도 당연하다고 해서, 동생마저도 이런 꼴을 당하게 했어.\"라며 개미들을 놀려대며 놀기만 하던 일을 울면서 뼈저리게 후회한다.", 
		"그래도 동생은 괜찮다면서 오빠의 손을 잡고 어디론가 떠난다.",
		"한편, 개미는 베짱이 남매가 자신의 집 앞에 찾아왔다 갔을 거라고는 꿈에도 생각치 못했다.", 
		"베짱이 남매가 떠나고 베짱이가 가지고 놀던 바이올린도 쓸쓸하게 눈에 파묻힌다.", 
		"그 후 이 베짱이 남매가 어떻게 되었는지는 아무도 모른다."
		};
public 개미와배짱이 () {}
public void 개미와배짱이_stop (boolean stop) {
	this.stop = stop;
	if(this.stop) {
		System.out.println("재생");
	}
	else {
		System.out.println("일시정지");
	}
}


@Override
public void run() {
	int i = 0;
	while(this.stop) {
		try {
			System.out.println(context[i]);
			Thread.sleep(2000);
			if(context[i].length() == context.length) break;
		} 
		catch (InterruptedException e) {
			
		}
		i++;
	}
}
}
